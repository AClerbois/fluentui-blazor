@typeparam TValue
@attribute [CascadingTypeParameter(nameof(TValue))]
@inherits FluentInputBase<TValue>

<CascadingValue TValue=FluentOptionContext IsFixed=true Value=_context @key=_context>
    <fluent-combobox @ref=Element
                     class="@Class"
                     style="@Style"
                     autocomplete="@Autocomplete.ToAttributeValue()"
                     open=@Open
                     placeholder=@Placeholder
                     position=@Position.ToAttributeValue()
                     id=@Id
                     value=@Value
                     current-value="@BindConverter.FormatValue(CurrentValue)"
                     disabled=@Disabled
                     name=@Name
                     required="@Required"
                     appearance="@Appearance.ToAttributeValue()"
                     @onchange="@(EventCallback.Factory.CreateBinder<string?>(this, __value => CurrentValueAsString = __value, CurrentValueAsString))"
                     @attributes="AdditionalAttributes">
        @if (Options is not null)
        {
            foreach (Option<TValue> option in Options)
            {
                <FluentOption Value=@option.Key Selected="option.Selected" Disabled=option.Disabled>@option.Value</FluentOption>
            }
        }
        else
        {
            @ChildContent
        }
    </fluent-combobox>
</CascadingValue>
