@typeparam TValue
@attribute [CascadingTypeParameter(nameof(TValue))]
@inherits FluentInputBase<TValue>

<CascadingValue TValue=FluentOptionContext IsFixed=true Value=_context @key=_context>
    <fluent-select @ref=Element
                   open="@Open"
                   position="@Position.ToAttributeValue()"
                   multiple="@Multiple"
                   id=@Id
                   value=@Value
                   current-value="@CurrentValueAsString"
                   disabled="@Disabled"
                   name=@Name
                   required=@Required
                   appearance="@Appearance.ToAttributeValue()"
                   @onchange="@(EventCallback.Factory.CreateBinder<string?>(this, __value => CurrentValueAsString = __value, CurrentValueAsString))"
                   @attributes="AdditionalAttributes">
        @if (Options is not null)
        {
            foreach (Option<TValue> option in Options)
            {
                <FluentOption Value=@option.Key Selected="option.Selected" Disabled=option.Disabled>@option.Value</FluentOption>
            }
        }
        else
        {
            @ChildContent
        }
    </fluent-select>
</CascadingValue>