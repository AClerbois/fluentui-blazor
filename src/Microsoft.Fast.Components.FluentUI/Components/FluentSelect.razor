@typeparam TValue
@attribute [CascadingTypeParameter(nameof(TValue))]
@inherits FluentInputBase<TValue>

<CascadingValue TValue=FluentOptionContext IsFixed=true Value=_context @key=_context>
    <fluent-select @ref=Element
                   open="@Open"
                   position="@Position.ToAttributeValue()"
                   multiple="@Multiple"
                   disabled="@Disabled"
                   appearance="@Appearance.ToAttributeValue()"
                   current-value="@CurrentValueAsString"
                   @onchange="@(EventCallback.Factory.CreateBinder<string?>(this, __value => CurrentValueAsString = __value, CurrentValueAsString))"
                   @attributes="AdditionalAttributes">
    @if (Items is not null)
    {
        foreach (Option<TValue> option in Items)
        {
            <FluentOption Value=@option.Key Selected="option.Selected" Disabled=option.Disabled>@option.Value</FluentOption>
        }
    }
    else
    {
        @ChildContent
    }
    </fluent-select>
</CascadingValue>