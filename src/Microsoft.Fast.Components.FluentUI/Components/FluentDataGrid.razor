@using Microsoft.AspNetCore.Components.Web.Virtualization
@inherits FluentComponentBase
@typeparam TGridItem
@attribute [CascadingTypeParameter(nameof(TGridItem))]

<CascadingValue Value="this" Name="OwningGrid" IsFixed="true">
    <fluent-data-grid @ref=Element
                      no-tabbing=@NoTabbing
                      generate-header=none
                      grid-template-columns=@GridTemplateColumns
                      @onrowfocus=HandleOnRowFocus
                      @attributes="@AdditionalAttributes">
        @if (GenerateHeader != GenerateHeaderOption.None)
        {
            DataGridRowType headerType = DataGridRowType.Header;
            if (GenerateHeader == GenerateHeaderOption.Sticky)
                headerType = DataGridRowType.StickyHeader;
            <FluentDataGridRow RowType=@headerType TItem=TGridItem>
                @{
                    int gridColumn = 1;
                    foreach (ColumnDefinition<TGridItem> column in ColumnDefinitions!)
                    {
                        <FluentDataGridCell TItem=TGridItem GridColumn=@(gridColumn++) CellType=DataGridCellType.ColumnHeader>
                            @if (HeaderCellTemplate != null)
                            {
                                @HeaderCellTemplate(column)
                            }
                            else
                            {
                                @column.Title
                            }
                        </FluentDataGridCell>
                    }
                }
            </FluentDataGridRow>
        }

        @if (RowsData == null)
        {
            @ChildContent
        }
        else
        {
            if (Virtualize)
            {
                <Virtualize TItem=TGridItem Items="RowsData.ToArray()" Context="item">
                    <ItemContent>
                        if (RowItemTemplate != null)
                        {
                            @RowItemTemplate(item)
                        }
                        else
                        {
                            <FluentDataGridRow GridTemplateColumns=@GridTemplateColumns ColumnDefinitions=@ColumnDefinitions RowData=@item />
                        }
                    </ItemContent>
                    <Placeholder>
                        <p>Loading...</p>
                    </Placeholder>
                </Virtualize>
            }
            else
            {
                int index = 1;
                foreach (TGridItem item in RowsData)
                {
                    if (RowItemTemplate != null)
                    {
                        @RowItemTemplate(item)
                    }
                    else
                    {
                        <FluentDataGridRow GridTemplateColumns=@GridTemplateColumns ColumnDefinitions=@ColumnDefinitions RowIndex=@(index++) TGridItem=TGridItem RowData=@item />
                    }
                }
            }
        }
    </fluent-data-grid>
</CascadingValue>