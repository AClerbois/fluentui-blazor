name: "Build, Sign, Publish"

on:
  push:
    branches:
      - net7
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      - '**/*.yml'
  workflow_dispatch:
    branches:
      - net7
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      - '**/*.yml'
      
jobs:
  build:
    name: Build, Pack, Publish 
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
      DOTNET_MULTILEVEL_LOOKUP: 0
      PROJECT: "src/Microsoft.Fast.Components.FluentUI/Microsoft.Fast.Components.FluentUI.csproj"
      BUILD_ARCH: "Any CPU"
      BUILD_CONFIG: "Release"

    steps:
    - uses: actions/checkout@v3


    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: |
            6.0.x
            7.0.0-preview.7.x
        include-prerelease: true

    - name: Restore
      run: dotnet restore ${{ env.PROJECT }}

    - name: Build
      run: dotnet build ${{ env.PROJECT }} --configuration ${{ env.BUILD_CONFIG }} --no-restore

    - name: Test
      run: dotnet test

    - name: Pack
      run: dotnet pack ${{ env.PROJECT }} --configuration ${{ env.BUILD_CONFIG }} -o packed --no-build

    - name: Publish artifacts
      uses: actions/upload-artifact@v2
      with:
        name: signednupkg
        path: packed
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    name: Deploy Demo
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: |
            6.0.x
            7.0.0-preview.7.x
          include-prerelease: true
      - name: Build
        run: dotnet publish -c Release -o publish -f net7.0 examples/FluentUI.Demo.Client/
      - name: Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APP_PR_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "publish/wwwroot"
          api_location: "Api"
          output_location: "publish/wwwroot"
          skip_api_build: true
