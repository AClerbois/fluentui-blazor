name: CD - Publish for Blazor / FluentUI

on:
  workflow_dispatch

env:
  OUTPUT_PATH: ${{ github.workspace }}/.nupkg
  NUGET_SOURCE: "https://api.nuget.org/v3/index.json"
  GITHUB_SOURCE: "https://nuget.pkg.github.com/Azure/index.json"
  CONFIGURATION: Release

jobs:
  build job:
    name: setup, build, validate, and publish
    runs-on: windows-latest
    if: contains('nicholasrice,awentzel,eisenbergeffect,Ibrahimmaga', github.actor)

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core 
      uses: actions/setup-dotnet@v1
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Package
      run: dotnet pack --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.OUTPUT_PATH }} -p:PackageVersion="${GITHUB_REF#refs/*/v}"
        working-directory: ${{ github.workspace }}/src/Microsoft.Fast.Components.FluentUI/Microsoft.Fast.Components.FluentUI.csproj
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: ${{ env.OUTPUT_PATH }}

  publish-nuget:
    steps:
      shell: powershell
    - task: DotNetCoreCLI@2
      displayName: '.NET Pack'
      inputs:
      command: custom
      custom: 'pack'
      projects: src/Microsoft.Fast.Components.FluentUI/Microsoft.Fast.Components.FluentUI.csproj
      arguments: '-c ${{ parameters.configuration }} -o $(Build.ArtifactStagingDirectory) --no-build /p:PackageVersion=$(Version)$(VersionSuffix) -v Quiet'

    - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
      displayName: 'ESRP CodeSigning: Nupkg'
      condition: and(succeeded(), eq(variables['SignArtifacts'], 'true'))
      inputs:
        ConnectedServiceName: 'ESRP Service'
        FolderPath: '$(Build.ArtifactStagingDirectory)'
        Pattern: '*.nupkg'
        signConfigType: inlineSignParams
        inlineOperation: |
          [
            {
              "KeyCode": "CP-401405",
              "OperationCode": "NuGetSign",
              "Parameters": {},
              "ToolName": "sign",
              "ToolVersion": "1.0"
             },
             {
               "KeyCode": "CP-401405",
               "OperationCode": "NuGetVerify",
               "Parameters": {},
               "ToolName": "sign",
               "ToolVersion": "1.0"
            }
          ]
    - task: PowerShell@2
      displayName: 'Delete CodeSignSummary Files'
      condition: and(succeeded(), eq(variables['SignArtifacts'], 'true'))
      inputs:
        targetType: Inline
        script: |
          Get-ChildItem -Path $(Build.ArtifactStagingDirectory) -Include CodeSignSummary-*.md -Recurse | Remove-Item -Force
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: drop
        publishLocation: Container

    - uses: actions/download-artifact@v2
      with:
        name: packages
        path: ${{ env.OUTPUT_PATH }}

    - name: Setup .NET Core ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v1
      
    - name: Publish
      run: dotnet nuget push --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ env.NUGET_SOURCE }} "*.nupkg"
        working-directory: ${{ env.OUTPUT_PATH }}
