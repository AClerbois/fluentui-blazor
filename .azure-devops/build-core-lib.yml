# Build and test Core project.

pr:
- main
- dev
trigger:
- main
- dev

# Build.BuildNumber (see versioning.yml)
name: $(FileVersion).$(Year:yy)$(DayOfYear).$(Rev:r)


# The `resources` specify the location and version of the 1ES PT.
resources:
  repositories:
  - repository: 1esPipelines
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  # The pipeline extends the 1ES PT which will inject different SDL and compliance tasks.
  # For productions pipelines, use "Official".
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    # Update the pool with your team's 1ES hosted pool.
    pool:
      name: NetCore1ESPool-Internal  # Name of your hosted pool
      #image: HostedPoolWindowsImage  # Name of the image in your pool. If not specified, first image of the pool is used
      #os: windows  # OS of the image. This value cannot be a variable. Allowed values: windows, linux, macOS

    stages:
    - stage: Stage
      jobs:
      - job: HostJob
        # If the pipeline publishes artifacts, use `templateContext` to define the artifacts.
        # This will enable 1ES PT to run SDL analysis tools on the artifacts and then upload them.
        templateContext:
          outputs:
          - output: pipelineArtifact
            targetPath: '$(Build.ArtifactStagingDirectory)'
            artifactName: build-core-artifact
        # Define the steps that the pipeline will run.
        # In most cases, copy and paste the steps from the original pipeline.
        steps:
        - powershell: echo "Running common/template-to-build-projects-1ES"
        - template: common/template-to-build-projects.yml@self
          parameters:
            Projects: |
              **/Microsoft.FluentUI.AspNetCore.Components.csproj
            Tests: |
              **/Microsoft.FluentUI.AspNetCore.Components.Tests.csprojparameters:
