@page "/Lab/Emoji"
@* Remember to replace the namespace below with your own project's namespace. *@
@namespace FluentUI.Demo.Shared


<h1>Emoji</h1>
<ApiDocumentation Component="typeof(FluentEmoji)" />

<h2 id="overview">Overview</h2>

<FluentEmoji Name="@FluentEmojis.Hamburger" EmojiStyle="EmojiStyle.Color" Size=@EmojiSize.Size16 />
<FluentEmoji Name="@FluentEmojis.Hamburger" EmojiStyle="EmojiStyle.Color" Size=@EmojiSize.Size32 />
<FluentEmoji Name="@FluentEmojis.Hamburger" EmojiStyle="EmojiStyle.Color" Size=@EmojiSize.Size64 />
<FluentEmoji Name="@FluentEmojis.Hamburger" EmojiStyle="EmojiStyle.Color" Size=@EmojiSize.Size128 />


<h2 id="explore-icons">Explore Emojis</h2>
<p>
    <EditForm EditContext="@editContext">
        <div class="form-grid">
            <div id="item-0">
                <FluentSearch Style="width: 100%" Name="Searchterm" @bind-Value="Form.Searchterm" Placeholder="Part of emoji name..."></FluentSearch>
            </div>
            <div id="item-1">
                <label for="Group">Group</label>
                <FluentSelect TOption="EmojiGroup?" Id="Group" @bind-SelectedOption="Form.Group" @onchange=@(x => HandleGroup(x))>
                    <FluentOption Value="-1">Choose a group...</FluentOption>
                    @foreach (EmojiGroup group in Enum.GetValues<EmojiGroup>())
                    {
                        <FluentOption Value=@group.ToString() Selected=@(group == Form.Group)>@(group.ToAttributeValue(false))</FluentOption>
                    }
                </FluentSelect>
            </div>
           
            <div id="item-2">
                <label for="Size">Size</label>
                <FluentSelect TOption="EmojiSize" Id="Size" @bind-SelectedOption="Form.Size" @onchange=@(x => HandleSize(x))>
                    @foreach (EmojiSize size in Enum.GetValues<EmojiSize>())
                    {
                        if (size != EmojiSize.Custom)
                        {
                            <FluentOption Value=@size.ToString() Selected=@(size == Form.Size)>@((int)size)</FluentOption>
                        }
                    }
                </FluentSelect>
            </div>
            <div id="item-3">
            </div>
            <div id="item-4">
                <label for="Style">Style</label>
                <FluentSelect TOption="EmojiStyle?" Id="Style" @bind-SelectedOption="Form.Style" @onchange=@(x => HandleStyle(x))>
                    <FluentOption Value="-1">Choose a style...</FluentOption>
                    @foreach (EmojiStyle style in Enum.GetValues<EmojiStyle>())
                    {
                        <FluentOption Value=@style.ToString() Selected=@(style == Form.Style)>@(style.ToAttributeValue(false))</FluentOption>
                    }
                </FluentSelect>
            </div>
            <div id="item-5">
            </div>
            <div id="item-6">
                <label for="Skintone">Skintone</label>
                <FluentSelect TOption="EmojiSkintone?" Id="Skintone" @bind-SelectedOption="Form.Skintone" @onchange=@(x => HandleSkintone(x))>
                    <FluentOption Value="-1">Choose a skintone...</FluentOption>
                    @foreach (EmojiSkintone skintone in Enum.GetValues<EmojiSkintone>())
                    {
                        <FluentOption Value=@skintone.ToString() Selected=@(skintone == Form.Skintone)>@(skintone.ToAttributeValue(false))</FluentOption>
                    }
                </FluentSelect>
            </div>
            <div id="item-7">
                <FluentButton Appearance="Appearance.Accent" @onclick="HandleSearch" Type=ButtonType.Submit><FluentIcon Name="@FluentIcons.Search" Size="@IconSize.Size20" Variant=IconVariant.Regular Color=Color.Fill Slot="start"></FluentIcon> Search</FluentButton>
                <FluentButton Appearance="Appearance.Neutral" @onclick="HandleReset" Type=ButtonType.Reset><FluentIcon Name="@FluentIcons.ArrowReset" Size="@IconSize.Size20" Variant=IconVariant.Regular Color=Color.Neutral Slot="start"></FluentIcon> Reset</FluentButton>
            </div>
        </div>
    </EditForm>
</p>

<FluentDivider Role="DividerRole.Presentation" />

@if (emojis?.Count > 0)
{
    <p style="padding: 1rem 0;">In the results below, click on an emoji card to copy a 'ready-to-paste' <code>FluentEmoji</code> component to the clipboard. </p>
}
<div id="filled" data-is-scrollable="true" style="overflow-y:auto;height:600px;">
    <div style="display:flex;flex-flow: row wrap;">
        @foreach (EmojiModel emoji in emojis!)
        {
            <FluentCard Class="preview" @onclick="()=> HandleClick(emoji)">
                <div class="inner">
                    <FluentEmoji Name=@emoji.Name Size=@Form.Size EmojiStyle=@emoji.Style Skintone=@Form.Skintone />
                </div>
                <div class="label">@emoji.Folder</div>
            </FluentCard>
        }
        @if (emojis.Count == 0)
        {
            <div style="display: flex;align-content: center;align-items: center;">
                <p style="padding: 1rem 0;">No emojis found</p>
            </div>
        }
    </div>
</div>