<FluentButton Appearance="Appearance.Accent" @onclick="Previous">Previous</FluentButton>

<FluentSelect TOption="Article2"
              SelectedOption="@SelectedArticle"
              SelectedOptionChanged="SelectionMade"
              Items="@Articles"
              Id="artListBox"
              OptionText="@(a => a.Name)"
              Position="SelectPosition.Below" />

<FluentButton Appearance="Appearance.Accent" @onclick="Next">Next</FluentButton>
<p>
    Selected article: @SelectedArticle?.Name
</p>

@*<FluentButton Appearance="Appearance.Accent" @onclick="Previous2">Previous</FluentButton>

<FluentSelect TOption="string"
              @bind-Value=@SelectedString
              Items="@Strings"
              Id="artListBox2"
              Position="SelectPosition.Below" />

<FluentButton Appearance="Appearance.Accent" @onclick="Next2">Next</FluentButton>

<p>
    Selected string: @SelectedString
</p>
*@

@code {
    public class Article2
    {
        public string? Name { get; set; }
    }

    public Article2? SelectedArticle;
    public List<Article2>? Articles;

    public string? SelectedString;
    public List<string>? Strings;

    public int ArticleIndex = 0;
    public int StringIndex = 0;

    protected override void OnInitialized()
    {
        LoadArticles();
        LoadStrings();

        SelectedArticle = Articles![ArticleIndex];
        SelectedString = Strings![StringIndex];
    }
    private void Next()
    {
        if (ArticleIndex < Articles!.Count-1)
        {
            SelectedArticle = Articles![++ArticleIndex];
        }
    }

    private void Previous()
    {
        if (ArticleIndex > 0)
        {
            SelectedArticle = Articles![--ArticleIndex];
        }
    }
    
    private void Previous2()
    {
        --StringIndex;
        if (StringIndex >= 0 && StringIndex < Strings!.Count)
        {
            SelectedString = Strings![StringIndex];
        }
    }

    private void Next2()
    {
        ++StringIndex;
        if (StringIndex >= 0 && StringIndex < Strings!.Count)
        {
            SelectedString = Strings![StringIndex];
        }

    }
    private void SelectionMade(Article2 selectedArticle)
    {
        SelectedArticle = selectedArticle;
        ArticleIndex = Articles!.IndexOf(selectedArticle);
    }

    private void LoadArticles()
    {
        Articles = new List<Article2>
        {
            new Article2{Name = "One"},
            new Article2{Name = "Two"},
            new Article2{Name = "Three"},
            new Article2{Name = "Four"},
            new Article2{Name = "Five"},
        };
    }

    private void LoadStrings()
    {
        Strings = new() { "One", "Two", "Three", "Four", "Five" };
    }
}
