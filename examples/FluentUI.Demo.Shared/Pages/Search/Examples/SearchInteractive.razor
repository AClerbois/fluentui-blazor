<FluentSearch @ref=searchTest @oninput=handleSearchInput Placeholder="Search for State"></FluentSearch>
<br />
<FluentListbox Options=@searchResults />

@code {
    FluentSearch? searchTest;

    List<string> searchData = new()
    {
        "Alabama",
        "Alaska",
        "Arizona",
        "Arkansas",
        "California",
        "Colorado",
        "Connecticut",
        "Delaware",
        "Florida",
        "Georgia",
        "Hawaii",
        "Idaho",
        "Illinois",
        "Indiana",
        "Iowa",
        "Kansas",
        "Kentucky",
        "Louisiana",
        "Maine",
        "Maryland",
        "Massachussets",
        "Michigain",
        "Minnesota",
        "Mississippi",
        "Missouri",
        "Montana",
        "Nebraska",
        "Nevada",
        "New Hampshire",
        "New Jersey",
        "New Mexico",
        "New York",
        "North Carolina",
        "North Dakota",
        "Ohio",
        "Oklahoma",
        "Oregon",
        "Pennsylvania",
        "Rhode Island",
        "South Carolina",
        "South Dakota",
        "Texas",
        "Tennessee",
        "Utah",
        "Vermont",
        "Virginia",
        "Washington",
        "Wisconsin",
        "West Virginia",
        "Wyoming"
    };

    List<Option<string>> searchResults = defaultResults();

    static List<Option<string>> defaultResults()
    {
        return new() { new Option<string> { Key = "", Value = "no results" } };
    }

    void handleSearchInput(ChangeEventArgs args)
    {
        if (args is not null && args.Value is not null)
        {
            string searchTerm = args.Value.ToString()!.ToLower();
            searchResults = defaultResults();
            if (searchTerm.Length > 0)
            {
                List<Option<string>> temp = searchData.Where(str => str.ToLower().Contains(searchTerm)).Select(str => new Option<string> { Key = str, Value = str }).ToList();
                if (temp.Count() > 0)
                {
                    searchResults = temp;
                }
            }
        }
    }
}