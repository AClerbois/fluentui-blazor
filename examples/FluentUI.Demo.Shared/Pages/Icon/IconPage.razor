@page "/Icon"

<h1>Icons</h1>
<ApiDocumentation Component="typeof(FluentIcon)" />
<h2>Overview</h2>
<h3>Color options</h3>
<p>
    Icons can be drawn and filled with a color through the <code>Color</code> parameter which takes a <code>IconColor</code> enumeration value. 
    <br /><br /> 
    &nbsp;&nbsp;&nbsp;<code>&lt;FluentIcon Name="@@FluentIcons.Alert"" Size="IconSize.Size48"" Filled=true Color="<em>{&middot;&middot;&middot;}</em>" /&gt;</code>
    <br /><br />
    With the code above you can use the following options at the <em>{&middot;&middot;&middot;}</em>:
    <dl>
        <dt><code>IconColor.Neutral</code> - Uses CSS variable --neutral-forground-rest, adapts to light/dark mode.</dt>
        <dd><FluentIcon Name="@FluentIcons.Alert" Size="IconSize.Size48" Filled=true Color="IconColor.Neutral" /></dd>
        <dt><code>IconColor.Accent</code> - Uses CSS variable --accent-fill-rest.</dt>
        <dd><FluentIcon Name="@FluentIcons.Alert" Size="IconSize.Size48" Filled=true Color="IconColor.Accent" /></dd>
        <dt><code>IconColor.Warning</code> - Uses CSS variable --warning-fill<sup>*</sup>.</dt>
        <dd><FluentIcon Name="@FluentIcons.Alert" Size="IconSize.Size48" Filled=true Color="IconColor.Warning" /></dd>
        <dt><code>IconColor.SevereWarning</code> - Uses CSS variable --severe-warning-fill<sup>*</sup>.</dt>
        <dd><FluentIcon Name="@FluentIcons.Alert" Size="IconSize.Size48" Filled=true Color="IconColor.SevereWarning" /></dd>
        <dt><code>IconColor.Error</code> - Uses CSS variable --error-fill<sup>*</sup>.</dt>
        <dd><FluentIcon Name="@FluentIcons.Alert" Size="IconSize.Size48" Filled=true Color="IconColor.Error" /></dd>
        <dt><code>IconColor.Success</code> - Uses CSS variable --success-fill<sup>*</sup>.</dt>
        <dd><FluentIcon Name="@FluentIcons.Alert" Size="IconSize.Size48" Filled=true Color="IconColor.Success" /></dd>
    </dl>
    <strong>(*)</strong>: This color is defined in the <code>variables.css</code> file. If your site is using 
    <FluentAnchor Href="/Reboot">Reboot</FluentAnchor> the <code>variables.css</code> file is automatically imported. If you do not 
    use Reboot, please add the <code>variables.css</code> file to your <code>index.html</code> or <code>_Layout.cshtml</code> file like this:
    <CodeSnippet Language="language-html">
 &lt;link href="_content/Microsoft.Fast.Components.FluentUI/css/variables.css" rel="stylesheet" /&gt;
    </CodeSnippet>
    <em>The color value will not be aplied if the CSS variable is not defined</em>
</p>
<h2>Culture Aware</h2>
<p>
    Some icons offer alternatives for specific languages (neutral cultures). You can specify a language to use for the icon by using the <code>NeutralCultureName</code> parameter and giving it the two letter ISO code of the culture.
    If a language version of an icon is not found, the original version will be used.
    <dl> 
        <dt>Neutral @@FluentIcons.TextBold icons</dt>
        <dd>Filled: <FluentIcon Name=@FluentIcons.TextBold Size=IconSize.Size24 Filled=true /> Regular: <FluentIcon Name=@FluentIcons.TextBold Size=IconSize.Size24 Filled=false /></dd>
        <dt>French @@FluentIcons.TextBold icons (<code>NeutralCultureName="fr"</code>)</dt>
        <dd>Filled: <FluentIcon Name=@FluentIcons.TextBold Size=IconSize.Size24 Filled=true NeutralCultureName="fr" /> Regular: <FluentIcon Name=@FluentIcons.TextBold Size=IconSize.Size24 Filled=false NeutralCultureName="fr"/></dd>
        <dt>German @@FluentIcons.TextBold icons (<code>NeutralCultureName="de"</code>)</dt>
        <dd>Filled: <FluentIcon Name=@FluentIcons.TextBold Size=IconSize.Size24 Filled=true NeutralCultureName="de" /> Regular: <FluentIcon Name=@FluentIcons.TextBold Size=IconSize.Size24 Filled=false NeutralCultureName="de"/></dd>
        <dt>Greek @@FluentIcons.TextBold icons (<code>NeutralCultureName="el"</code>) (does not exist, fall back to original)</dt>
        <dd>Filled: <FluentIcon Name=@FluentIcons.TextBold Size=IconSize.Size24 Filled=true NeutralCultureName="el" /> Regular: <FluentIcon Name=@FluentIcons.TextBold Size=IconSize.Size24 Filled=false NeutralCultureName="el"/></dd>
        <dt>Spanish @@FluentIcons.TextBold icons (<code>NeutralCultureName="es"</code>)</dt>
        <dd>Filled: <FluentIcon Name=@FluentIcons.TextBold Size=IconSize.Size24 Filled=true NeutralCultureName="es" /> Regular: <FluentIcon Name=@FluentIcons.TextBold Size=IconSize.Size24 Filled=false NeutralCultureName="es"/></dd>
    </dl>
</p>
<h2>Explore Icons</h2>
<p>
    <EditForm EditContext="@editContext" >
        <div style="display: flex; flex-wrap: wrap; width: 90%;height: 100px;align-items: center;justify-content: space-between;">
            <div style="display: flex;align-content: center;align-items: center;">
                <FluentSearch Name="Searchterm" @bind-Value="Form.Searchterm" Placeholder="Search.."></FluentSearch>
            </div>
            <div style="display: flex;align-content: center;align-items: center;">
                <label for="Size">Size</label>
                <FluentSelect TOption="IconSize" Id="Size" @bind-SelectedItem="Form.Size" @onchange="@(x => HandleSize(x))">
                    @foreach (IconSize size in Enum.GetValues<IconSize>())
                    {
                        <FluentOption Value=@size.ToString()>@((int)size)</FluentOption>
                    }
                </FluentSelect>
            </div>

            <div style="display: flex;align-content: center;align-items: center;">
                <FluentCheckbox @bind-Value="Form.Filled" @onclick="HandleStyle">Filled</FluentCheckbox>
                <FluentCheckbox @bind-Value="Form.Regular" @onclick="HandleStyle">Regular</FluentCheckbox>
            </div>
            <div style="display: flex;align-content: center;align-items: center;">
                <label for="Color">Color</label>
                <FluentSelect TOption="IconColor" Id="Color" @bind-SelectedItem="Form.Color" @onchange="@(x => HandleColor(x))">
                    @foreach (IconColor color in Enum.GetValues<IconColor>())
                    {
                        <FluentOption Value=@color.ToString()>@(color)</FluentOption>
                    }
                </FluentSelect>
            </div>
            <FluentButton @onclick="HandleSearch"><FluentIcon Name="@FluentIcons.Search" Size="@IconSize.Size16" Filled=false Slot="start"></FluentIcon> Search</FluentButton>
        </div>
    </EditForm>
</p>

@if (icons.Count > 0)
{
    <p>In the results below, click on an icon card to copy a 'ready-to-paste' <code>FluentIcon</code> component to the clipboard. </p>
}
<div id="filled" data-is-scrollable="true" style="overflow-y:auto;height:600px;">
    <div style="display:flex;flex-flow: row wrap;">
        @foreach (IconModel icon in icons)
        {
            <FluentCard Class="preview" @onclick="()=> HandleClick(icon)">
                <div class="inner" >
                    <FluentIcon Name=@icon.Name Size=@icon.Size Filled=@icon.Filled Color="@Form.Color" />
                </div>
                <div class="label">@icon.Folder</div>
            </FluentCard>
        }
        @if (icons.Count == 0)
        {
        <div style="display: flex;align-content: center;align-items: center;">
            <p style="padding-right: 10px;">No icons found</p>
        </div>
        }
    </div>
</div>

