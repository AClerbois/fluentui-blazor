@page "/SearchPage"
<h1>Search</h1>
<h4>Default</h4>
<FluentSearch></FluentSearch>
<FluentSearch>Label</FluentSearch>

<h4>Interaction Example</h4>
<FluentSearch @ref=searchTest @oninput=handleSearchInput Placeholder="Search for State"></FluentSearch><br/>
<FluentListbox Items=@searchResults  />

<h4>Full Width</h4>
<FluentSearch style="width: 100%;"></FluentSearch>

<h4>Placeholder</h4>
<FluentSearch Placeholder="Placeholder"></FluentSearch>

<!-- Required -->
<h4>Required</h4>
<FluentSearch Required="true"></FluentSearch>

<!-- Disabled -->
<h4>Disabled</h4>
<FluentSearch Disabled="true"></FluentSearch>
<FluentSearch Disabled="true">label</FluentSearch>
<FluentSearch Disabled="true" Placeholder="placeholder"></FluentSearch>

<!-- Read only -->
<h4>Read only</h4>
<FluentSearch Readonly="true" Value="Readonly"></FluentSearch>
<FluentSearch Readonly="true" Value="Readonly">label</FluentSearch>

<!-- Read only -->
<h4>Autofocus</h4>
<FluentSearch Autofocus="true">autofocus</FluentSearch>

<!-- Start -->
<h4>With start</h4>
<FluentSearch>
    <svg slot="start" width="16" height="16" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
        <path d="M6.5,7.7h-1v-1h1V7.7z M10.6,7.7h-1v-1h1V7.7z M14.7,6.7v2.1h-1v2.6c0,0.2,0,0.4-0.1,0.6c-0.1,0.2-0.2,0.4-0.3,0.5c-0.1,0.1-0.3,0.3-0.5,0.3c-0.2,0.1-0.4,0.1-0.6,0.1H10l-3.5,3v-3H3.9c-0.2,0-0.4,0-0.6-0.1c-0.2-0.1-0.4-0.2-0.5-0.3c-0.1-0.1-0.3-0.3-0.3-0.5c-0.1-0.2-0.1-0.4-0.1-0.6V8.8h-1V6.7h1V5.2c0-0.2,0-0.4,0.1-0.6c0.1-0.2,0.2-0.4,0.3-0.5c0.1-0.1,0.3-0.3,0.5-0.3c0.2-0.1,0.4-0.1,0.6-0.1h3.6V1.9C7.3,1.8,7.2,1.7,7.1,1.5C7,1.4,7,1.2,7,1C7,0.9,7,0.8,7,0.6c0.1-0.1,0.1-0.2,0.2-0.3c0.1-0.1,0.2-0.2,0.3-0.2C7.7,0,7.9,0,8,0c0.1,0,0.3,0,0.4,0.1c0.1,0.1,0.2,0.1,0.3,0.2C8.8,0.4,8.9,0.5,9,0.6C9,0.8,9,0.9,9,1c0,0.2,0,0.4-0.1,0.5C8.8,1.7,8.7,1.8,8.5,1.9v1.7h3.6c0.2,0,0.4,0,0.6,0.1c0.2,0.1,0.4,0.2,0.5,0.3c0.1,0.1,0.3,0.3,0.3,0.5c0.1,0.2,0.1,0.4,0.1,0.6v1.5H14.7z M12.6,5.2c0-0.1-0.1-0.3-0.2-0.4c-0.1-0.1-0.2-0.2-0.4-0.2H3.9c-0.1,0-0.3,0.1-0.4,0.2C3.4,4.9,3.4,5,3.4,5.2v6.2c0,0.1,0.1,0.3,0.2,0.4c0.1,0.1,0.2,0.2,0.4,0.2h3.6v1.8l2.1-1.8h2.5c0.1,0,0.3-0.1,0.4-0.2c0.1-0.1,0.2-0.2,0.2-0.4V5.2z M5.8,8.9c0.3,0.3,0.6,0.5,1,0.7C7.2,9.7,7.6,9.8,8,9.8s0.8-0.1,1.2-0.2c0.4-0.2,0.7-0.4,1-0.7l0.7,0.7c-0.4,0.4-0.8,0.7-1.4,0.9c-0.5,0.2-1,0.3-1.6,0.3s-1.1-0.1-1.6-0.3c-0.5-0.2-1-0.5-1.3-0.9L5.8,8.9z" />
    </svg>
</FluentSearch>

<!-- End -->
<h4>With end</h4>
<FluentSearch>
    <svg slot="end" width="16" height="16" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
        <path d="M6.5,7.7h-1v-1h1V7.7z M10.6,7.7h-1v-1h1V7.7z M14.7,6.7v2.1h-1v2.6c0,0.2,0,0.4-0.1,0.6c-0.1,0.2-0.2,0.4-0.3,0.5c-0.1,0.1-0.3,0.3-0.5,0.3c-0.2,0.1-0.4,0.1-0.6,0.1H10l-3.5,3v-3H3.9c-0.2,0-0.4,0-0.6-0.1c-0.2-0.1-0.4-0.2-0.5-0.3c-0.1-0.1-0.3-0.3-0.3-0.5c-0.1-0.2-0.1-0.4-0.1-0.6V8.8h-1V6.7h1V5.2c0-0.2,0-0.4,0.1-0.6c0.1-0.2,0.2-0.4,0.3-0.5c0.1-0.1,0.3-0.3,0.5-0.3c0.2-0.1,0.4-0.1,0.6-0.1h3.6V1.9C7.3,1.8,7.2,1.7,7.1,1.5C7,1.4,7,1.2,7,1C7,0.9,7,0.8,7,0.6c0.1-0.1,0.1-0.2,0.2-0.3c0.1-0.1,0.2-0.2,0.3-0.2C7.7,0,7.9,0,8,0c0.1,0,0.3,0,0.4,0.1c0.1,0.1,0.2,0.1,0.3,0.2C8.8,0.4,8.9,0.5,9,0.6C9,0.8,9,0.9,9,1c0,0.2,0,0.4-0.1,0.5C8.8,1.7,8.7,1.8,8.5,1.9v1.7h3.6c0.2,0,0.4,0,0.6,0.1c0.2,0.1,0.4,0.2,0.5,0.3c0.1,0.1,0.3,0.3,0.3,0.5c0.1,0.2,0.1,0.4,0.1,0.6v1.5H14.7z M12.6,5.2c0-0.1-0.1-0.3-0.2-0.4c-0.1-0.1-0.2-0.2-0.4-0.2H3.9c-0.1,0-0.3,0.1-0.4,0.2C3.4,4.9,3.4,5,3.4,5.2v6.2c0,0.1,0.1,0.3,0.2,0.4c0.1,0.1,0.2,0.2,0.4,0.2h3.6v1.8l2.1-1.8h2.5c0.1,0,0.3-0.1,0.4-0.2c0.1-0.1,0.2-0.2,0.2-0.4V5.2z M5.8,8.9c0.3,0.3,0.6,0.5,1,0.7C7.2,9.7,7.6,9.8,8,9.8s0.8-0.1,1.2-0.2c0.4-0.2,0.7-0.4,1-0.7l0.7,0.7c-0.4,0.4-0.8,0.7-1.4,0.9c-0.5,0.2-1,0.3-1.6,0.3s-1.1-0.1-1.6-0.3c-0.5-0.2-1-0.5-1.3-0.9L5.8,8.9z" />
    </svg>
</FluentSearch>

<h4>Filled</h4>
<h5>Default</h5>
<FluentSearch Appearance="Appearance.Filled"></FluentSearch>
<FluentSearch Appearance="Appearance.Filled">label</FluentSearch>

<h5>Placeholder</h5>
<FluentSearch Appearance="Appearance.Filled" Placeholder="Placeholder"></FluentSearch>

<!-- Required -->
<h5>Required</h5>
<FluentSearch Appearance="Appearance.Filled" Required="true"></FluentSearch>

<!-- Disabled -->
<h5>Disabled</h5>
<FluentSearch Appearance="Appearance.Filled" Disabled="true"></FluentSearch>
<FluentSearch Appearance="Appearance.Filled" Disabled="true">label</FluentSearch>
<FluentSearch Appearance="Appearance.Filled" Disabled="true" Placeholder="placeholder"></FluentSearch>

<!-- Read only -->
<h5>Read only</h5>
<FluentSearch Appearance="Appearance.Filled" Readonly="true" Value="Readonly"></FluentSearch>
<FluentSearch Appearance="Appearance.Filled" Readonly="true" Value="Readonly">label</FluentSearch>

<!-- With label -->
<h4>Visual vs audio label</h4>
<FluentSearch>
    <span aria-label="Audio label">Visible label</span>
</FluentSearch>

<!-- With hidden label -->
<h4>Audio label only</h4>
<FluentSearch>
    <span aria-label="Audio label only"></span>
</FluentSearch>

<!-- With aria-label -->
<h4>With aria-label</h4>
<FluentSearch aria-label="Search with aria-label"></FluentSearch>

<h4>Minlength</h4>
<FluentSearch MinLength="4">Minlength</FluentSearch>

<h4>Maxlength</h4>
<FluentSearch MaxLength="4">Maxlength</FluentSearch>

<!-- Focus Async -->
<h4>Focus Async</h4>
<FluentButton @onclick="() => focusTest!.FocusAsync()">FocusAsync</FluentButton> 
<FluentSearch @ref=focusTest></FluentSearch>

@code {
    FluentSearch? focusTest;
    FluentSearch? searchTest;

    List<string> searchData = new() 
    {
        "Alabama",
        "Alaska",
        "Arizona",
        "Arkansas",
        "California",
        "Colorado",
        "Connecticut",
        "Delaware",
        "Florida",
        "Georgia",
        "Hawaii",
        "Idaho",
        "Illinois",
        "Indiana",
        "Iowa",
        "Kansas",
        "Kentucky",
        "Louisiana",
        "Maine",
        "Maryland",
        "Massachussets",
        "Michigain",
        "Minnesota",
        "Mississippi",
        "Missouri",
        "Montana",
        "Nebraska",
        "Nevada",
        "New Hampshire",
        "New Jersey",
        "New Mexico",
        "New York",
        "North Carolina",
        "North Dakota",
        "Ohio",
        "Oklahoma",
        "Oregon",
        "Pennsylvania",
        "Rhode Island",
        "South Carolina",
        "South Dakota",
        "Texas",
        "Tennessee",
        "Utah",
        "Vermont",
        "Virginia",
        "Washington",
        "Wisconsin",
        "West Virginia",
        "Wyoming"
    };

    List<Option<string>> searchResults = defaultResults();

    static List<Option<string>> defaultResults()
    {
        return new() { new Option<string> { Key = "", Value = "no results" } };
    }

    void handleSearchInput(ChangeEventArgs args)
    {
        if (args is not null && args.Value is not null)
        {
                string searchTerm = args.Value.ToString()!.ToLower();
                searchResults = defaultResults();
                if(searchTerm.Length>0)
                {
                    List<Option<string>> temp = searchData.Where(str => str.ToLower().Contains( searchTerm )).Select(str => new Option<string> { Key = str, Value = str }).ToList();
                    if(temp.Count()>0)
                    {
                        searchResults = temp;
                    }
                }
        }
    }
}