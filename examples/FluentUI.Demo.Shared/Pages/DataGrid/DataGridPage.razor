@page "/DataGrid"

@using FluentUI.Demo.Shared.Pages.DataGrid.Examples;
@using Microsoft.Fast.Components.FluentUI;

<h1>Data grid</h1>
<p>
    The <code>&lt;FluentDataGrid&gt;</code> component is used to display tabular data. The <code>&lt;FluentDataGridRow&gt;</code> 
    and <code>&lt;FluentDataGridCell&gt;</code> components are typically created programmatically by the parent grid but some 
    authors may find it useful to create them manually.
</p>
<p>
    <code>&lt;FluentDataGrid&gt;</code> wraps the <code>&lt;fluent-data-grid&gt;</code> element, a web component implementation 
    of a data grid leveraging the Fluent  UI design system. Internally <code>&lt;FluentDataGrid&gt;</code> is using the code from
    <a href="https://aspnet.github.io/quickgridsamples">QuickGrid</a> with a few adjustments to parameter names to stay in-line 
    with the fluent-data-grid web component (see table below)
</p>

<table title="Parameter name changes">
    <tr>
        <th align="left" style="width: 8rem;">QuickGrid</th>
        <th align="left" style="width: 8rem;">FluentDataGrid</th>
    </tr>
    <tr>
        <td>Items</td>
        <td>RowsData</td>
    </tr>
    <tr>
        <td>ItemsProvider</td>
        <td>RowsDataProvider</td>
    </tr>
    <tr>
        <td>ItemSize</td>
        <td>RowsDataSize</td>
    </tr>
    <tr>
        <td>ItemKey</td>
        <td>RowsDataKey</td>
    </tr>
    <tr>
        <td></td>
        <td></td>
    </tr>
</table>

<ApiDocumentation Component="typeof(FluentDataGridCell<string>)" GenericLabel="TGridItem" />

<ApiDocumentation Component="typeof(FluentDataGridRow<string>)" GenericLabel="TGridItem" />

<ApiDocumentation Component="typeof(FluentDataGrid<string>)" GenericLabel="TGridItem" />

<h2>Examples</h2>

<DemoSection Title="Get started" ExampleFile="DataGridGetStarted">
    <Description>To begin, add the following code to one of your Blazor page components to render a very simple grid (with sortable columns)</Description>
</DemoSection>

<DemoSection Title="Typical usage" ExampleFile="DataGridTypical">
    <Description>
        Here is an example of a data grid that uses in-memory data and enables features including pagination, sorting, filtering, column options and column resizing.
    </Description>
</DemoSection>

@*<DemoSection Title="Remote data" ExampleFile="DataGridRemoteData">
    <Description>
        <p>
            If you're using Blazor WebAssembly, it's very common to fetch data from a JSON API on a server. If you want to
            fetch only the data that's needed for the current page/viewport and apply any sorting or filtering rules on the
            server, you can use the <code>ItemsProvider</code> parameter.
        </p>
        <p>
            You can also use <code>ItemsProvider</code> with Blazor Server if it needs to query an external endpoint, or in any
            other case where your requirements aren't covered by an <code>IQueryable</code>.
        </p>
        <p>
            To do this, supply a callback matching the <code>GridItemsProvider&lt;TGridItem&gt;</code> delegate type, where <code>TGridItem</code>
            is the type of data displayed in the grid. Your callback will be given a parameter of type <code>GridItemsProviderRequest&lt;TGridItem&gt;</code>
            which specifies the start index, maximum row count, and sort order of data to return. As well as returning the matching items, you need
            to return a <code>totalItemCount</code> so that paging or virtualization can work.
        </p>
        <p>
            Here is an example of connecting a grid to the public <a href="https://open.fda.gov/apis/food/enforcement/" target="_blank">OpenFDA Food Enforcement database</a>.
        </p>
    </Description>
</DemoSection>*@


<DemoSection Title="Virtualized grid" ExampleFile="DataGridVirtualize"></DemoSection>

<DemoSection Title="Template columns" ExampleFile="DataGridTemplateColumns"></DemoSection>

<DemoSection Title="Dynamic columns" ExampleFile="DataGridDynamicColumns"></DemoSection>

<DemoSection Title="Custom paging UI" ExampleFile="DataGridCustomPaging"></DemoSection>

<DemoSection Title="Manual grid" ExampleFile="DataGridManual"></DemoSection>
