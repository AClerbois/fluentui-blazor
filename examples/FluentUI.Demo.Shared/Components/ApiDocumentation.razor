@using System.Globalization;
@using System.Reflection;

@if (this.Properties.Any())
{
    <h3>Properties</h3>
    <FluentDataGrid RowsData="@this.Properties.ToList()" ColumnDefinitions=@_propertiesGrid>
        <RowItemTemplate>
            <FluentDataGridRow>
                <FluentDataGridCell GridColumn="0">
                    <FluentBadge>@context.Name</FluentBadge>
                </FluentDataGridCell>
                <FluentDataGridCell GridColumn="1">
                    @context.Type

                    @* Display list of Enumerations (if available) *@
                    @if (context.EnumValues.Length > 0)
                    {
                        var id = Identifier.NewId();
                        <FluentIcon Id="@id"
                           Name="@FluentIcons.Info"
                           Size="@IconSize.Size24"
                           style="margin-left: 10px; vertical-align: top;"
                           Filled=false
                           UseAccentColor=false></FluentIcon>
                        <FluentTooltip Anchor="@id" Position="TooltipPosition.Right">
                            @foreach (var item in context.EnumValues)
                            {
                                @item <br />
                            }
                        </FluentTooltip>
                    }
                </FluentDataGridCell>
                <FluentDataGridCell GridColumn="2">
                    @context.Default
                </FluentDataGridCell>
                <FluentDataGridCell GridColumn="3">
                    <div style="white-space: break-spaces">
                        @context.Description
                    </div>
                </FluentDataGridCell>
            </FluentDataGridRow>
        </RowItemTemplate>
    </FluentDataGrid>
}

@if (this.Events.Any())
{
    <h3>EventCallbacks</h3>
    <FluentDataGrid RowsData="@this.Events.ToList()" ColumnDefinitions="@_eventsGrid">
        <RowItemTemplate>
            <FluentDataGridRow>
                <FluentDataGridCell GridColumn="0">
                    <FluentBadge>@context.Name</FluentBadge>
                </FluentDataGridCell>
                <FluentDataGridCell GridColumn="1">
                    @context.Type
                </FluentDataGridCell>
                <FluentDataGridCell GridColumn="2">
                    <div style="white-space: break-spaces">
                        @context.Description
                    </div>
                </FluentDataGridCell>
            </FluentDataGridRow>
        </RowItemTemplate>
    </FluentDataGrid>
}

@if (this.Methods.Any())
{
    <h3>Methods</h3>
    <FluentDataGrid RowsData="@this.Methods.ToList()" ColumnDefinitions="@_methodsGrid">

        <RowItemTemplate>
            <FluentDataGridRow>
                <FluentDataGridCell GridColumn="0">
                    <FluentBadge>@context.Name</FluentBadge>
                </FluentDataGridCell>
                <FluentDataGridCell GridColumn="1">
                    @foreach (var param in @context.Parameters)
                    {
                        @param <br />
                    }
                </FluentDataGridCell>
                <FluentDataGridCell GridColumn="2">
                    @context.Type
                </FluentDataGridCell>
                <FluentDataGridCell GridColumn="3">
                    <div style="white-space: break-spaces">
                        @context.Description
                    </div>
                </FluentDataGridCell>
            </FluentDataGridRow>
        </RowItemTemplate>
    </FluentDataGrid>
}