@using System.Globalization;
@using System.Reflection;
@using Microsoft.Fast.Components.FluentUI;


@if (string.IsNullOrWhiteSpace(GenericLabel))
{
    <h2>@Component.Name Class</h2>
}
else
{
    <h2>@Component.Name.Replace("`1",$"<{GenericLabel}>") Class</h2>
}

@if (this.Properties.Any())
{
    <h3>Parameters</h3>
    <FluentDataGrid RowsData="@this.Properties.AsQueryable()" GridTemplateColumns="1fr 1fr 0.5fr 1.5fr">
        <TemplateColumn Title="Name"><code>@context.Name</code></TemplateColumn>
        <TemplateColumn Title="Type">
                    @context.Type

                    @* Display list of Enumerations (if available) *@
                    @if (context.EnumValues.Length > 0)
                    {
                        var id = Identifier.NewId();
                        <FluentIcon id="@id"
                            Name="@FluentIcons.Info"
                            Size="@IconSize.Size24"
                            style="margin-left: 10px; vertical-align: top;"
                            Filled=false
                            UseAccentColor=false></FluentIcon>
                        <FluentTooltip Anchor="@id" Position="TooltipPosition.Right">
                            @foreach (var item in context.EnumValues)
                            {
                                @item <br />
                            }
                        </FluentTooltip>
                    }
        </TemplateColumn>
        <PropertyColumn Property="@(c => c.Default)" />
        <TemplateColumn Title="Description">
            <div style="white-space: break-spaces">
                @(new MarkupString(context.Description))
            </div>
        </TemplateColumn>        
    </FluentDataGrid>
}

@if (this.Events.Any())
{
    <h3>EventCallbacks</h3>
    <FluentDataGrid RowsData="@this.Events.AsQueryable()" GridTemplateColumns="1fr 1fr 1fr">
        <TemplateColumn Title="Name"><code>@context.Name</code></TemplateColumn>
        <PropertyColumn Property="@(c => c.Type)" />
        <TemplateColumn Title="Description">
            <div style="white-space: break-spaces">
                @(new MarkupString(context.Description))
            </div>
        </TemplateColumn>
    </FluentDataGrid>
}

@if (this.Methods.Any())
{
    <h3>Methods</h3>
    <FluentDataGrid RowsData="@this.Methods.AsQueryable()" GridTemplateColumns="1fr 1fr 1fr 1fr">
        <TemplateColumn Title="Name"><code>@context.Name</code></TemplateColumn>
        <TemplateColumn Title="Parameters">
            @foreach (var param in @context.Parameters)
            {
                @param <br />
            }
        </TemplateColumn>
        <PropertyColumn Property="@(c => c.Type)" />
        <TemplateColumn Title="Description">
            <div style="white-space: break-spaces">
                @(new MarkupString(context.Description))
            </div>
        </TemplateColumn>        
    </FluentDataGrid>
}